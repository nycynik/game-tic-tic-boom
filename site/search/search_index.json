{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Tic-Tic-Boom A new game built in homage to castles and cannons. Quick Getting Started This project uses pnpm, but npm works as well. pnpm install pnpm dev And the window should open with the game running. Enjoy!","title":"Welcome to Tic-Tic-Boom"},{"location":"#welcome-to-tic-tic-boom","text":"A new game built in homage to castles and cannons.","title":"Welcome to Tic-Tic-Boom"},{"location":"#quick-getting-started","text":"This project uses pnpm, but npm works as well. pnpm install pnpm dev And the window should open with the game running. Enjoy!","title":"Quick Getting Started"},{"location":"development/","text":"Development Tools Recommended IDE Setup VSCode + Volar (and disable Vetur). Type Support for .vue Imports in TS TypeScript cannot handle type information for .vue imports by default, so we replace the tsc CLI with vue-tsc for type checking. In editors, we need Volar to make the TypeScript language service aware of .vue types. Customize configuration See Vite Configuration Reference . Project Setup pnpm install Compile and Hot-Reload for Development pnpm dev Type-Check, Compile and Minify for Production pnpm build Run Unit Tests with Vitest pnpm test:unit Run End-to-End Tests with Cypress pnpm test:e2e:dev This runs the end-to-end tests against the Vite development server. It is much faster than the production build. But it's still recommended to test the production build with test:e2e before deploying (e.g. in CI environments): pnpm build pnpm test:e2e Lint with ESLint pnpm lint Documentation This project uses MkDocs. For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Development Tools"},{"location":"development/#development-tools","text":"","title":"Development Tools"},{"location":"development/#recommended-ide-setup","text":"VSCode + Volar (and disable Vetur).","title":"Recommended IDE Setup"},{"location":"development/#type-support-for-vue-imports-in-ts","text":"TypeScript cannot handle type information for .vue imports by default, so we replace the tsc CLI with vue-tsc for type checking. In editors, we need Volar to make the TypeScript language service aware of .vue types.","title":"Type Support for .vue Imports in TS"},{"location":"development/#customize-configuration","text":"See Vite Configuration Reference .","title":"Customize configuration"},{"location":"development/#project-setup","text":"pnpm install","title":"Project Setup"},{"location":"development/#compile-and-hot-reload-for-development","text":"pnpm dev","title":"Compile and Hot-Reload for Development"},{"location":"development/#type-check-compile-and-minify-for-production","text":"pnpm build","title":"Type-Check, Compile and Minify for Production"},{"location":"development/#run-unit-tests-with-vitest","text":"pnpm test:unit","title":"Run Unit Tests with Vitest"},{"location":"development/#run-end-to-end-tests-with-cypress","text":"pnpm test:e2e:dev This runs the end-to-end tests against the Vite development server. It is much faster than the production build. But it's still recommended to test the production build with test:e2e before deploying (e.g. in CI environments): pnpm build pnpm test:e2e","title":"Run End-to-End Tests with Cypress"},{"location":"development/#lint-with-eslint","text":"pnpm lint","title":"Lint with ESLint"},{"location":"development/#documentation","text":"This project uses MkDocs. For full documentation visit mkdocs.org .","title":"Documentation"},{"location":"development/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"development/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}